<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variable Initalization
// temp 
global.completed = 0;
update = false;

pong   = false;

points = 500;
shouldDecrease = false;

minigames = ds_list_create();
ds_list_add(minigames,"type","connect","memes","code");
randomize();
ds_list_shuffle(minigames);


if(global.completed == 0) {
    if(ds_list_find_value(minigames,0) == "type") instance_create(0,0,obj_i_type);
    if(ds_list_find_value(minigames,0) == "connect") instance_create(0,0,obj_i_connect);
    if(ds_list_find_value(minigames,0) == "memes") instance_create(0,0,obj_i_memes);
    if(ds_list_find_value(minigames,0) == "code") instance_create(0,0,obj_i_code);
}
    
if(global.completed == 1) {
    if(ds_list_find_value(minigames,1) == "type") instance_create(0,0,obj_i_type);
    if(ds_list_find_value(minigames,1) == "connect") instance_create(0,0,obj_i_connect);
    if(ds_list_find_value(minigames,1) == "memes") instance_create(0,0,obj_i_memes);
    if(ds_list_find_value(minigames,1) == "code") instance_create(0,0,obj_i_code);
}
    
if(global.completed == 2) {
        if(ds_list_find_value(minigames,2) == "type") instance_create(0,0,obj_i_type);
        if(ds_list_find_value(minigames,2) == "connect") instance_create(0,0,obj_i_connect);
        if(ds_list_find_value(minigames,2) == "memes") instance_create(0,0,obj_i_memes);
        if(ds_list_find_value(minigames,2) == "code") instance_create(0,0,obj_i_code);
}

if(global.completed == 4) {
    if(ds_list_find_value(minigames,3) == "type") instance_create(0,0,obj_i_type);
    if(ds_list_find_value(minigames,3) == "connect") instance_create(0,0,obj_i_connect);
    if(ds_list_find_value(minigames,3) == "memes") instance_create(0,0,obj_i_memes);
    if(ds_list_find_value(minigames,3) == "code") instance_create(0,0,obj_i_code);
}
    
if(global.completed == 3) {
    if(!pong) {
        instance_create(0,0,obj_pong);
    } else {
        global.completed++;
    }
}

instance_create(0,0,obj_blank);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update Minigames
// TODO: Add points
if(update) {
    global.points += (floor(points)+100);
    if(global.completed == 0) {
        if(ds_list_find_value(minigames,0) == "type") instance_create(0,0,obj_i_type);
        if(ds_list_find_value(minigames,0) == "connect") instance_create(0,0,obj_i_connect);
        if(ds_list_find_value(minigames,0) == "memes") instance_create(0,0,obj_i_memes);
        if(ds_list_find_value(minigames,0) == "code") instance_create(0,0,obj_i_code);
    }
    
    if(global.completed == 1) {
        if(ds_list_find_value(minigames,1) == "type") instance_create(0,0,obj_i_type);
        if(ds_list_find_value(minigames,1) == "connect") instance_create(0,0,obj_i_connect);
        if(ds_list_find_value(minigames,1) == "memes") instance_create(0,0,obj_i_memes);
        if(ds_list_find_value(minigames,1) == "code") instance_create(0,0,obj_i_code);
    }
    
    if(global.completed == 2) {
        if(ds_list_find_value(minigames,2) == "type") instance_create(0,0,obj_i_type);
        if(ds_list_find_value(minigames,2) == "connect") instance_create(0,0,obj_i_connect);
        if(ds_list_find_value(minigames,2) == "memes") instance_create(0,0,obj_i_memes);
        if(ds_list_find_value(minigames,2) == "code") instance_create(0,0,obj_i_code);
    }
    if(global.completed == 4) {
        if(ds_list_find_value(minigames,3) == "type") instance_create(0,0,obj_i_type);
        if(ds_list_find_value(minigames,3) == "connect") instance_create(0,0,obj_i_connect);
        if(ds_list_find_value(minigames,3) == "memes") instance_create(0,0,obj_i_memes);
        if(ds_list_find_value(minigames,3) == "code") instance_create(0,0,obj_i_code);
    }
    
    if(global.completed == 3) {
        if(!pong) {
            instance_create(0,0,obj_pong);
        }
    }
    
    instance_destroy(obj_meme_background);
    instance_destroy(obj_connect_background);
    
    points = 500;
    shouldDecrease = false;
    update = false;
}


if(global.completed == 3) &amp;&amp; (pong) {
    global.completed = 5;
}

if(global.completed &gt;= 5) {
    randomize();
    ds_list_shuffle(minigames);
    global.completed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Decrease Score
if(shouldDecrease) &amp;&amp; (points &gt; 0) {
    points-=0.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Point Boost
/// Display Score
if(!instance_exists(obj_pong)) {
    draw_set_font(ft_main_smaller);
    draw_set_halign(fa_center);
    draw_set_colour(c_red);
    draw_text(room_width/2+75,11,"+" + string(floor(points+100)));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
